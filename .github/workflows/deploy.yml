name: CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=My-Project \
            -Dsonar.host.url=http://13.232.125.253:9000 \
            -Dsonar.login=$SONAR_TOKEN

      - name: Wait for SonarQube Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Waiting for SonarQube analysis to complete..."
          projectKey="My-Project"
          ceTaskUrl=$(curl -s -u $SONAR_TOKEN: "http://13.232.125.253:9000/api/ce/component?component=$projectKey" | jq -r '.queue[0].url')

          # Poll the CE task until it completes
          status="PENDING"
          while [ "$status" != "SUCCESS" ]; do
            sleep 5
            status=$(curl -s -u $SONAR_TOKEN: "$ceTaskUrl" | jq -r '.task.status')
            echo "Current analysis status: $status"
            if [[ "$status" == "FAILED" ]]; then
              echo "SonarQube analysis failed"
              exit 1
            fi
          done

          analysisId=$(curl -s -u $SONAR_TOKEN: "$ceTaskUrl" | jq -r '.task.analysisId')

          qualityGateStatus=$(curl -s -u $SONAR_TOKEN: "http://13.232.125.253:9000/api/qualitygates/project_status?analysisId=$analysisId" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $qualityGateStatus"

          if [ "$qualityGateStatus" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi

      - name: Upload WAR to Artifactory
        env:
          ARTIFACTORY_URL: http://13.232.125.253:8082/artifactory
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          curl -u "$ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD" \
            -T target/*.war \
            "$ARTIFACTORY_URL/example-repo-local/com/myapp/1.0.0/myapp-1.0.0.war"

      - name: Deploy WAR to Tomcat
        env:
          TOMCAT_USERNAME: ${{ secrets.TOMCAT_USERNAME }}
          TOMCAT_PASSWORD: ${{ secrets.TOMCAT_PASSWORD }}
        run: |
          curl -u $TOMCAT_USERNAME:$TOMCAT_PASSWORD \
            --upload-file target/*.war \
            "http://3.111.39.16:8080/manager/text/deploy?path=/myapp&update=true"
