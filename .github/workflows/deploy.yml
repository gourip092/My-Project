name: CI/CD: Maven + Sonar + Artifactory + Tomcat

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout source code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java
    - name: Set up Java 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    # Step 4: Build with Maven
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Step 5: SonarQube Analysis
    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=My-Project \
          -Dsonar.host.url=http://13.232.125.253:9000 \
          -Dsonar.login=$SONAR_TOKEN

    # Step 6: Upload WAR to JFrog Artifactory
    - name: Upload WAR to Artifactory
      env:
        ARTIFACTORY_URL: http://13.232.125.253:8082/artifactory
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      run: |
        curl -u "$ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD" \
          -T target/*.war \
          "$ARTIFACTORY_URL/libs-release-local/com/myapp/1.0.0/myapp-1.0.0.war"

    # Step 7: Deploy to Tomcat
    - name: Deploy WAR to Tomcat
      env:
        TOMCAT_USERNAME: ${{ secrets.TOMCAT_USERNAME }}
        TOMCAT_PASSW_
